(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{478:function(t,a,e){"use strict";e.r(a);var n=e(2),o=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"day-2-mysql-relationships-many-to-many"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#day-2-mysql-relationships-many-to-many"}},[t._v("#")]),t._v(" Day 2 - MYSQL RELATIONSHIPS (MANY-TO-MANY)")]),t._v(" "),e("h2",{attrs:{id:"daily-journal-read-dotnet-webapi-s-relationships-and-answer-the-following-questions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#daily-journal-read-dotnet-webapi-s-relationships-and-answer-the-following-questions"}},[t._v("#")]),t._v(" Daily Journal - Read Dotnet WebAPI's > Relationships, and answer the following questions")]),t._v(" "),e("ol",[e("li",[t._v("What is the difference between a primary key and a foreign key")])]),t._v(" "),e("p",[t._v("primary key is the main part of the sql table, it is the unique thing that prevents duplicate data. the only that should ever be the primary key is ID\nforeign key is data used from other tables populated on other tables. again, usually reserved for ID's")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("What is an Alias?")])]),t._v(" "),e("p",[t._v("a nickname for accounts or data")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Demonstrate how you would query a join statement that would get all of a doctors patients from the following collections:")])]),t._v(" "),e("p",[t._v("CREATE TABLE doctors (\nid INT NOT NULL AUTO_INCREMENT,\n-- CODE OMITTED\nPRIMARY KEY (id)\n)")]),t._v(" "),e("p",[t._v("CREATE TABLE patients (\nid INT NOT NULL AUTO_INCREMENT,\n-- CODE OMITTED\nPRIMARY KEY (id)\n)")]),t._v(" "),e("p",[t._v("CREATE TABLE doctors (\nid INT NOT NULL AUTO_INCREMENT,\ndoctorId INT NOT NULL,\npatientId INT NOT NULL,")]),t._v(" "),e("p",[t._v("FOREIGN KEY (doctorId)\nREFERENCES doctors(id),\nFOREIGN KEY (patientId)\nREFERENCES patients(id),\n)")]),t._v(" "),e("p",[t._v("This is what I would write\nSELECT\ndoctors."),e("em",[t._v(",\npatients.")]),t._v("\nFROM keeps doctors\nJOIN accounts patients ON doctors.creatorId = patients.id;")]),t._v(" "),e("h2",{attrs:{id:"links"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[t._v("#")]),t._v(" Links")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/PaytonMacdonald/contractor",target:"_blank",rel:"noopener noreferrer"}},[t._v("contractor"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=o.exports}}]);